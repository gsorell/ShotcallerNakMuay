import React, { useRef, useState } from 'react';
import { 
  captureAndDownloadElement, 
  captureElementAsBlob, 
  shareWorkoutImage, 
  generateWorkoutFilename,
  isWebShareSupported,
  WorkoutStats 
} from './utils/imageUtils';

interface WorkoutCompletedProps {
  stats: WorkoutStats;
  onRestart: () => void;
  onReset: () => void;
  onViewLog: () => void;
}

export default function WorkoutCompleted({ stats, onRestart, onReset, onViewLog }: WorkoutCompletedProps) {
  const workoutSummaryRef = useRef<HTMLDivElement>(null);
  const [isCapturing, setIsCapturing] = useState(false);

  // Map difficulty levels to proper display names
  const getDifficultyDisplayName = (difficulty: string): string => {
    const difficultyMap: { [key: string]: string } = {
      'easy': 'Novice',
      'medium': 'Amateur',
      'hard': 'Pro',
      'novice': 'Novice',
      'amateur': 'Amateur',
      'pro': 'Pro'
    };
    return difficultyMap[difficulty.toLowerCase()] || difficulty;
  };

  const handleDownload = async () => {
    if (!workoutSummaryRef.current) return;
    
    setIsCapturing(true);
    try {
      const filename = generateWorkoutFilename(stats);
      await captureAndDownloadElement(workoutSummaryRef.current, filename);
    } catch (error) {
      console.error('Failed to download workout summary:', error);
      alert('Failed to download workout summary. Please try again.');
    } finally {
      setIsCapturing(false);
    }
  };

  const handleShare = async () => {
    if (!workoutSummaryRef.current) return;
    
    setIsCapturing(true);
    try {
      const blob = await captureElementAsBlob(workoutSummaryRef.current);
      await shareWorkoutImage(blob, stats);
    } catch (error) {
      console.error('Failed to share workout summary:', error);
      // Fallback to download if sharing fails
      handleDownload();
    } finally {
      setIsCapturing(false);
    }
  };

  return (
    <div 
      ref={workoutSummaryRef}
      style={{
        background: 'linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%)',
        borderRadius: 0,
        padding: 'clamp(1.5rem, 4vw, 2.5rem)',
        color: 'white',
        width: '100%',
        minHeight: '100vh',
        boxSizing: 'border-box',
        position: 'relative',
        overflow: 'hidden',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'space-between'
      }}
    >
      {/* Enhanced main container with social media optimized design */}
      <div style={{
        background: 'linear-gradient(135deg, rgba(6, 182, 212, 0.15) 0%, rgba(249, 168, 212, 0.2) 50%, rgba(139, 92, 246, 0.15) 100%)',
        borderRadius: '24px',
        padding: 'clamp(1.5rem, 4vw, 2.5rem)',
        margin: 'clamp(1rem, 3vw, 1.5rem)',
        border: '1px solid rgba(255, 255, 255, 0.1)',
        backdropFilter: 'blur(20px)',
        position: 'relative',
        overflow: 'hidden',
        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.3)',
        display: 'flex',
        flexDirection: 'column',
        minHeight: 'calc(100vh - 3rem)'
      }}>
        
        {/* Geometric decoration - responsive */}
        <div style={{
          position: 'absolute',
          top: 'clamp(15px, 3vw, 20px)',
          right: 'clamp(15px, 3vw, 20px)',
          width: 'clamp(40px, 8vw, 60px)',
          height: 'clamp(40px, 8vw, 60px)',
          border: '2px solid rgba(249, 168, 212, 0.3)',
          borderRadius: '50%',
          opacity: 0.6
        }} />
        <div style={{
          position: 'absolute',
          bottom: 'clamp(15px, 3vw, 20px)',
          left: 'clamp(15px, 3vw, 20px)',
          width: 'clamp(30px, 6vw, 40px)',
          height: 'clamp(30px, 6vw, 40px)',
          background: 'linear-gradient(45deg, rgba(6, 182, 212, 0.2), rgba(249, 168, 212, 0.2))',
          borderRadius: '8px',
          transform: 'rotate(45deg)'
        }} />

        <div style={{
          position: 'relative',
          zIndex: 1,
          textAlign: 'center'
        }}>

          {/* Header section with branding - responsive */}
          <div style={{ marginBottom: 'clamp(1.5rem, 4vw, 2rem)' }}>
            <img src="/assets/icon_stacked.png" alt="Logo" style={{ 
              maxWidth: 'clamp(150px, 35vw, 200px)',
              marginBottom: 'clamp(0.75rem, 2vw, 1rem)',
              filter: 'drop-shadow(0 4px 12px rgba(0, 0, 0, 0.3))'
            }} />
            <h1 style={{ 
              margin: 0, 
              color: '#f9a8d4',
              fontSize: 'clamp(1.6rem, 5vw, 2.2rem)',
              fontWeight: 800,
              textShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',
              letterSpacing: '-0.02em'
            }}>
              Workout Complete!
            </h1>
            <div style={{
              width: 'clamp(60px, 15vw, 80px)',
              height: '4px',
              background: 'linear-gradient(90deg, #f9a8d4 0%, #06b6d4 100%)',
              margin: 'clamp(0.75rem, 2vw, 1rem) auto',
              borderRadius: '2px',
              boxShadow: '0 2px 8px rgba(249, 168, 212, 0.4)'
            }} />
          </div>
        {/* Decorative background elements - responsive */}
        <div style={{
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          background: 'radial-gradient(circle at 20% 20%, rgba(249, 168, 212, 0.15) 0%, transparent 50%), radial-gradient(circle at 80% 80%, rgba(6, 182, 212, 0.15) 0%, transparent 50%)',
          pointerEvents: 'none'
        }} />
        
        {/* Geometric decoration - responsive */}
        <div style={{
          position: 'absolute',
          top: 'clamp(15px, 3vw, 20px)',
          right: 'clamp(15px, 3vw, 20px)',
          width: 'clamp(40px, 8vw, 60px)',
          height: 'clamp(40px, 8vw, 60px)',
          border: '2px solid rgba(249, 168, 212, 0.3)',
          borderRadius: '50%',
          opacity: 0.6
        }} />
        <div style={{
          position: 'absolute',
          bottom: 'clamp(15px, 3vw, 20px)',
          left: 'clamp(15px, 3vw, 20px)',
          width: 'clamp(30px, 6vw, 40px)',
          height: 'clamp(30px, 6vw, 40px)',
          background: 'linear-gradient(45deg, rgba(6, 182, 212, 0.2), rgba(249, 168, 212, 0.2))',
          borderRadius: '8px',
          transform: 'rotate(45deg)'
        }} />

        <div style={{
          position: 'relative',
          zIndex: 1,
          textAlign: 'center'
        }}>

          {/* Date and workout info - responsive */}
          <div style={{ 
            fontSize: 'clamp(0.9rem, 2.5vw, 1.1rem)', 
            fontWeight: 600, 
            marginBottom: 'clamp(0.5rem, 1vw, 0.5rem)',
            color: '#06b6d4',
            textShadow: '0 1px 3px rgba(0, 0, 0, 0.3)'
          }}>
            {new Date(stats.timestamp).toLocaleDateString('en-US', {
              weekday: 'long',
              month: 'long',
              day: 'numeric',
              year: 'numeric'
            })}
          </div>

          {/* Workout type - hero responsive */}
          <div style={{
            fontSize: 'clamp(1.3rem, 4.5vw, 1.8rem)',
            fontWeight: 800,
            color: '#f9a8d4',
            marginBottom: 'clamp(1.5rem, 4vw, 2rem)',
            lineHeight: 1.1,
            textShadow: '0 2px 8px rgba(0, 0, 0, 0.4)',
            letterSpacing: '-0.01em'
          }}>
            {stats.emphases.join(' â€¢ ')}
          </div>

          {/* Stats showcase - responsive */}
          <div style={{
            background: 'rgba(0, 0, 0, 0.3)',
            borderRadius: '16px',
            padding: 'clamp(1rem, 3vw, 1.5rem)',
            marginBottom: 'clamp(1rem, 3vw, 1.5rem)',
            backdropFilter: 'blur(10px)',
            border: '1px solid rgba(255, 255, 255, 0.1)'
          }}>
            <div style={{
              display: 'grid',
              gridTemplateColumns: '1fr 1fr',
              gap: 'clamp(0.75rem, 2vw, 1rem)',
              marginBottom: 'clamp(0.75rem, 2vw, 1rem)'
            }}>
              <div style={{ textAlign: 'center' }}>
                <div style={{ 
                  fontSize: 'clamp(0.65rem, 1.5vw, 0.75rem)', 
                  color: '#94a3b8', 
                  marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',
                  textTransform: 'uppercase',
                  letterSpacing: '0.1em',
                  fontWeight: 600
                }}>
                  Difficulty
                </div>
                <div style={{ 
                  fontSize: 'clamp(1.1rem, 3.5vw, 1.4rem)', 
                  fontWeight: 800, 
                  color: '#f9a8d4',
                  textShadow: '0 1px 3px rgba(0, 0, 0, 0.3)'
                }}>
                  {getDifficultyDisplayName(stats.difficulty)}
                </div>
              </div>

              <div style={{ textAlign: 'center' }}>
                <div style={{ 
                  fontSize: 'clamp(0.65rem, 1.5vw, 0.75rem)', 
                  color: '#94a3b8', 
                  marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',
                  textTransform: 'uppercase',
                  letterSpacing: '0.1em',
                  fontWeight: 600
                }}>
                  Shots Called
                </div>
                <div style={{ 
                  fontSize: 'clamp(1.1rem, 3.5vw, 1.4rem)', 
                  fontWeight: 800, 
                  color: '#06b6d4',
                  textShadow: '0 1px 3px rgba(0, 0, 0, 0.3)'
                }}>
                  {stats.shotsCalledOut}
                </div>
              </div>
            </div>

            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              paddingTop: 'clamp(0.75rem, 2vw, 1rem)',
              borderTop: '1px solid rgba(255, 255, 255, 0.15)'
            }}>
              <div style={{ textAlign: 'center', flex: 1 }}>
                <div style={{ 
                  fontSize: 'clamp(0.65rem, 1.5vw, 0.75rem)', 
                  color: '#94a3b8', 
                  marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',
                  textTransform: 'uppercase',
                  letterSpacing: '0.1em',
                  fontWeight: 600
                }}>
                  Rounds
                </div>
                <div style={{ 
                  fontSize: 'clamp(1.2rem, 4vw, 1.6rem)', 
                  fontWeight: 800, 
                  color: '#f9a8d4',
                  textShadow: '0 1px 3px rgba(0, 0, 0, 0.3)'
                }}>
                  {stats.roundsCompleted}/{stats.roundsPlanned}
                </div>
              </div>

              <div style={{
                width: '2px',
                height: 'clamp(35px, 8vw, 50px)',
                background: 'linear-gradient(180deg, transparent 0%, rgba(255, 255, 255, 0.2) 50%, transparent 100%)',
                margin: '0 clamp(0.5rem, 2vw, 1rem)'
              }} />

              <div style={{ textAlign: 'center', flex: 1 }}>
                <div style={{ 
                  fontSize: 'clamp(0.65rem, 1.5vw, 0.75rem)', 
                  color: '#94a3b8', 
                  marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',
                  textTransform: 'uppercase',
                  letterSpacing: '0.1em',
                  fontWeight: 600
                }}>
                  Duration
                </div>
                <div style={{ 
                  fontSize: 'clamp(1rem, 3vw, 1.2rem)', 
                  fontWeight: 800, 
                  color: '#06b6d4',
                  textShadow: '0 1px 3px rgba(0, 0, 0, 0.3)'
                }}>
                  {stats.roundLengthMin} min/round
                </div>
              </div>
            </div>
          </div>

          {/* Social media footer - responsive */}
          <div style={{ 
            textAlign: 'center', 
            marginTop: 'clamp(1.5rem, 4vw, 2rem)',
            paddingTop: 'clamp(0.75rem, 2vw, 1rem)',
            borderTop: '1px solid rgba(255, 255, 255, 0.1)'
          }}>
            <div style={{
              fontSize: 'clamp(0.8rem, 2vw, 0.9rem)',
              color: '#94a3b8',
              marginBottom: 'clamp(0.25rem, 1vw, 0.5rem)',
              fontWeight: 600
            }}>
              ðŸ¥Š #NakMuay #MuayThai #ShotcallerNakMuay
            </div>
            <div style={{
              fontSize: 'clamp(0.7rem, 1.8vw, 0.8rem)',
              color: '#64748b',
              fontStyle: 'italic'
            }}>
              Train smart, fight smarter
            </div>
          </div>

          {/* Action buttons - positioned at bottom, hidden during capture */}
          <div 
            className="action-buttons"
            style={{ 
              marginTop: 'clamp(2rem, 5vw, 3rem)',
              display: 'flex', 
              flexDirection: 'column', 
              gap: 'clamp(16px, 4vw, 20px)', 
              alignItems: 'center'
            }}
          >
            
            {/* Primary action buttons - uniform size */}
            <div style={{ 
              display: 'grid',
              gridTemplateColumns: '1fr 1fr',
              gap: 'clamp(12px, 3vw, 16px)', 
              width: '100%',
              maxWidth: '400px'
            }}>
              <button 
                onClick={onRestart} 
                style={{ 
                  background: '#2563eb',
                  color: 'white', 
                  border: 'none',
                  borderRadius: 12, 
                  padding: '12px 8px', 
                  fontWeight: 700, 
                  cursor: 'pointer',
                  fontSize: '14px',
                  boxShadow: '0 4px 12px rgba(37, 99, 235, 0.25)',
                  transition: 'all 0.2s ease',
                  boxSizing: 'border-box',
                  width: '100%',
                  height: '48px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}
              >
                Restart
              </button>
              <button 
                onClick={onReset} 
                style={{ 
                  background: '#ef4444',
                  color: 'white', 
                  border: 'none',
                  borderRadius: 12, 
                  padding: '12px 8px', 
                  fontWeight: 700, 
                  cursor: 'pointer',
                  fontSize: '14px',
                  boxShadow: '0 4px 12px rgba(239, 68, 68, 0.25)',
                  transition: 'all 0.2s ease',
                  boxSizing: 'border-box',
                  width: '100%',
                  height: '48px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}
              >
                Home
              </button>
            </div>

            {/* Secondary actions - uniform size buttons */}
            <div style={{ 
              display: 'grid',
              gridTemplateColumns: isWebShareSupported() ? '1fr 1fr 1fr' : '1fr 1fr',
              gap: 'clamp(8px, 2vw, 12px)', 
              width: '100%',
              maxWidth: '400px'
            }}>
              <button 
                onClick={onViewLog} 
                style={{ 
                  background: '#f9a8d4',
                  color: 'white', 
                  border: 'none',
                  borderRadius: 12, 
                  padding: '12px 8px', 
                  fontWeight: 600, 
                  cursor: 'pointer',
                  fontSize: '13px',
                  boxShadow: '0 2px 8px rgba(249, 168, 212, 0.3)',
                  transition: 'all 0.2s ease',
                  boxSizing: 'border-box',
                  width: '100%',
                  height: '48px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}
              >
                View Log
              </button>
              
              <button 
                onClick={handleDownload}
                disabled={isCapturing}
                style={{ 
                  background: isCapturing ? '#6b7280' : 'rgba(255, 255, 255, 0.1)',
                  color: 'white',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  borderRadius: 12, 
                  padding: '12px 8px', 
                  fontWeight: 500, 
                  cursor: isCapturing ? 'not-allowed' : 'pointer',
                  fontSize: '13px',
                  transition: 'all 0.2s ease',
                  backdropFilter: 'blur(10px)',
                  boxSizing: 'border-box',
                  width: '100%',
                  height: '48px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }}
              >
                {isCapturing ? 'Capturing...' : 'Download'}
              </button>
              
              {isWebShareSupported() ? (
                <button 
                  onClick={handleShare}
                  disabled={isCapturing}
                  style={{ 
                    background: isCapturing ? '#6b7280' : 'rgba(255, 255, 255, 0.1)',
                    color: 'white',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    borderRadius: 12, 
                    padding: '12px 8px', 
                    fontWeight: 500, 
                    cursor: isCapturing ? 'not-allowed' : 'pointer',
                    fontSize: '13px',
                    transition: 'all 0.2s ease',
                    backdropFilter: 'blur(10px)',
                    boxSizing: 'border-box',
                    width: '100%',
                    height: '48px',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center'
                  }}
                >
                  {isCapturing ? 'Preparing..' : 'Share'}
                </button>
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};